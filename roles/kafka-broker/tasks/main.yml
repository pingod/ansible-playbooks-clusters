- name: create data directory
  file:
    path: "{{ data_dir }}"
    state: directory
    owner: root
    group: root

- name: create log directory
  file:
    path: "{{ log_dir }}"
    state: directory
    owner: root
    group: root

- name: create configuration directory
  file:
    path: "{{ config_dir }}"
    state: directory
    owner: root
    group: root

- name: copy main configuration file
  template:
    src: server.properties.j2
    dest: "{{ config_dir }}/server.properties"
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart {{ service_name }} service

- name: copy log4j configuration file
  template:
    src: log4j.properties.j2
    dest: "{{ config_dir }}/log4j.properties"
    owner: root
    group: root
    mode: "0644"
  notify:
    - restart {{ service_name }} service

- name: reset data directory owner and group
  file:
    path: "{{ data_dir }}"
    state: directory
    owner: root
    group: root
    recurse: yes

- name: copy service file env-file for systemctl
  template:
    src: kafka.service.env.j2
    dest: "{{ config_dir }}/systemctl-env.sh"
    owner: root
    group: root
  notify:
    - restart {{ service_name }} service

- name: copy service file for systemctl
  template:
    src: kafka.service.j2
    dest: "/lib/systemd/system/{{ service_name }}.service"
    owner: root
    group: root
  notify:
    - call 'sudo systemctl daemon-reload'
    - restart {{ service_name }} service

- name: call 'sudo systemctl daemon-reload'
  shell:
    cmd: "sudo systemctl daemon-reload"
  changed_when: no

- name: start {{ service_name }} service
  service:
    name: "{{ service_name }}"
    state: started
    enabled: yes
