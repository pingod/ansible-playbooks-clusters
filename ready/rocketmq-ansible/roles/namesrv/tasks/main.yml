- name: check namesrv deploy directory
  stat:
    path: "{{ rocketmq_deploy_path }}/rocketmq"
  register: deploy_directory

- debug:
    msg: "{{ deploy_directory }}"

- name: download Apache Rocketmq
  unarchive:
    src: "{{ rocketmq_download_url }}"
    dest: "{{ rocketmq_deploy_path }}"
    remote_src: yes
    mode: 0750
  when: deploy_directory.stat.exists == False

- name: stat download directory
  stat: path={{ rocketmq_deploy_path }}/rocketmq-all-{{ rocketmq_version }}-bin-release
  register: download_stat

- name: rename namesrv deploy directory
  command: mv {{ rocketmq_deploy_path }}/rocketmq-all-{{ rocketmq_version }}-bin-release {{ rocketmq_deploy_path }}/rocketmq
  when: download_stat.stat.exists

- name: Remove old files {{ rocketmq_deploy_path }}/rocketmq-all-{{ rocketmq_version }}-bin-release
  file: path={{ rocketmq_deploy_path }}/rocketmq-all-{{ rocketmq_version }}-bin-release state=absent

- name: create rocketmq log path
  file:
    path: "{{ rocketmq_log_path }}"
    state: directory
    recurse: yes

- name: modify namesrv log path
  template:
    src: logback_namesrv.xml.j2
    dest: "{{ rocketmq_deploy_path }}/rocketmq/conf/logback_namesrv.xml"

- name: add namesrv boot mechanism
  template:
    src: mqnamesrv.service
    dest: /usr/lib/systemd/system/
    mode: 0750

- name: check namesrv status
  shell: jps | grep NamesrvStartup | wc -l
  register: check_status

- debug:
    msg: "{{ check_status }}"

# - name: Start and enable namesrv service
#   systemd:
#     name:    mqnamesrv.service
#     enabled: yes
#     state:   started
#   register: namesrv_service_result

- name: start namesrv
  shell: |
    systemctl disable mqnamesrv
    systemctl enable mqnamesrv
    systemctl stop mqnamesrv
    systemctl start mqnamesrv
  when: check_status.stdout|int == 0